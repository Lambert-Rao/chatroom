Index: client.py
===================================================================
diff --git a/client.py b/client.py
deleted file mode 100644
--- a/client.py	(revision 9984e0af7e80d7c724e37bf6d8e98eb2f1bd252b)
+++ /dev/null	(revision 9984e0af7e80d7c724e37bf6d8e98eb2f1bd252b)
@@ -1,31 +0,0 @@
-import socket
-
-from threading import Thread
-
-from distlib.compat import raw_input
-
-sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
-host = "82.157.185.215"
-localhost = "127.0.0.1"
-sock.connect((host, 12345))
-
-def send_msg(sock, msg):
-    while True:
-        msg = raw_input()
-        sock.send(bytes(msg, "utf8"))
-        if msg == "{quit}":
-            sock.close()
-            break
-def recv_msg(sock):
-    while True:
-        try:
-            data = sock.recv(1024)
-            print(data.decode("utf8"))
-        except OSError:
-            break
-if __name__== '__main__':
-    print("Connected to server,type'{quit}' to exit")
-    nikename = raw_input("Enter your nikename: ")
-    sock.send(bytes(nikename, "utf8"))
-    Thread(target=send_msg, args=(sock, nikename)).start()
-    Thread(target=recv_msg, args=(sock,)).start()
\ No newline at end of file
Index: server.py
===================================================================
diff --git a/server.py b/server.py
deleted file mode 100644
--- a/server.py	(revision 9984e0af7e80d7c724e37bf6d8e98eb2f1bd252b)
+++ /dev/null	(revision 9984e0af7e80d7c724e37bf6d8e98eb2f1bd252b)
@@ -1,41 +0,0 @@
-import socket
-from threading import Thread
-
-host = '0.0.0.0'
-port = 12345
-sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
-sock.bind((host, port))
-clients = []
-
-
-def broadcast(msg, nikename=""):
-    for sock in clients:
-        sock.send(bytes(nikename, "utf8") + msg)
-
-
-def handle_client(conn, addr):
-    print("Connected to: ", addr)
-    nickname = conn.recv(1024).decode("utf8")
-    clients.append(conn)
-    welcome = '%s has joined!' % nickname
-    broadcast(bytes(welcome, "utf8"))
-    while True:
-        msg = conn.recv(1024)
-        if msg != bytes("{quit}", "utf8"):
-            broadcast(msg, nickname + ": ")
-        else:
-            conn.send(bytes("{quit}", "utf8"))
-            conn.close()
-            del clients[clients.index(conn)]
-            print("Disconnected from: ", addr, nickname)
-            broadcast(bytes("%s has left the chat." % nickname, "utf8"))
-            break
-
-
-if __name__ == '__main__':
-    print("Server is running...")
-    sock.listen(5)
-    while True:
-        print("Waiting for connection...")
-        client, address = sock.accept()
-        Thread(target=handle_client, args=(client, address)).start()
Index: test.py
===================================================================
diff --git a/test.py b/test.py
deleted file mode 100644
--- a/test.py	(revision 9984e0af7e80d7c724e37bf6d8e98eb2f1bd252b)
+++ /dev/null	(revision 9984e0af7e80d7c724e37bf6d8e98eb2f1bd252b)
@@ -1,12 +0,0 @@
-import socket
-from threading import Thread
-host = '0.0.0.0'
-port = 12345
-sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
-sock.bind((host, port))
-
-sock.listen(5)
-client, address = sock.accept()
-print("Connected to: ", address)
-nikename = client.recv(1024).decode("utf8")
-client.send(bytes("Welcome %s!" % nikename, "utf8"))
\ No newline at end of file
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># chatroom\n简单用python实现一个聊天室，权当练习\n\n或许以后会升级成c++程序
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
--- a/README.md	(revision 9984e0af7e80d7c724e37bf6d8e98eb2f1bd252b)
+++ b/README.md	(date 1668765922565)
@@ -1,4 +1,46 @@
-# chatroom
-简单用python实现一个聊天室，权当练习
+# Chat room
+
+[![license](https://img.shields.io/github/license/Lambert-Rao/chatroom?style=plastic)](LICENSE)[![code size](https://img.shields.io/github/languages/code-size/Lambert-Rao/chatroom?style=plastic)]()[![platform](https://img.shields.io/badge/platform-Linux-yellow?style=plastic)](https://en.wikipedia.org/wiki/Linux)
+
+A simple client-server chat room project.
+
+> warning! may not work on windows platform
+
+## Background
+
+I'm learning socket program, so I make this as a practice.
+
+## Install
+
+```shell
+#get all resources 
+wget https://github.com/Lambert-Rao/chatroom.git
+#or install from release 
+
+#sometimes you need to install the tk
+sudo pacman -S tk
+```
+
+## Usage
+
+```shell
+#for client
+python3 client.py
+#or use the packaged executable file
+```
+
+
+```shell
+#for server 
+#download the server directory 
+cd cmake & cmake .. & make
+./server ${your_port}
+```
+
+## Contributing
+
+issues and PRs accepted.
+
+## License
 
-或许以后会升级成c++程序
\ No newline at end of file
+[MIT © Richard McRichface.](./LICENSE)
\ No newline at end of file
